{"ast":null,"code":"var _jsxFileName = \"/Users/baby/Desktop/web Dev/Quotes-app/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    data: loadedComments,\n    status\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n  let comments;\n  if (status === \"pending\") comments = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n    comments: loadedComments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 16\n  }, this);\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) comments = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"centered\",\n    children: \"No comments found !\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onAddComment: addCommentHandler,\n      quoteId: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"cTe9zO0annXR5TAc2Ma7M8DRvCc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useCallback","useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","classes","NewCommentForm","Comments","isAddingComment","setIsAddingComment","params","sendRequest","data","loadedComments","status","quoteId","startAddCommentHandler","addCommentHandler","comments","length"],"sources":["/Users/baby/Desktop/web Dev/Quotes-app/src/components/comments/Comments.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { sendRequest, data: loadedComments, status } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  let comments;\n\n  if (status === \"pending\")\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0)\n    comments = <CommentsList comments={loadedComments} />;\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  )\n    comments = <p className=\"centered\">No comments found !</p>;\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          onAddComment={addCommentHandler}\n          quoteId={params.quoteId}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMW,MAAM,GAAGV,SAAS,EAAxB;EAEA,MAAM;IAAEW,WAAF;IAAeC,IAAI,EAAEC,cAArB;IAAqCC;EAArC,IAAgDb,OAAO,CAACC,cAAD,CAA7D;EAEAJ,SAAS,CAAC,MAAM;IACda,WAAW,CAACD,MAAM,CAACK,OAAR,CAAX;EACD,CAFQ,EAEN,CAACJ,WAAD,EAAcD,MAAM,CAACK,OAArB,CAFM,CAAT;;EAIA,MAAMC,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,MAAMQ,iBAAiB,GAAGpB,WAAW,CAAC,MAAM;IAC1Cc,WAAW,CAACD,MAAM,CAACK,OAAR,CAAX;EACD,CAFoC,EAElC,CAACJ,WAAD,EAAcD,MAAM,CAACK,OAArB,CAFkC,CAArC;EAIA,IAAIG,QAAJ;EAEA,IAAIJ,MAAM,KAAK,SAAf,EACEI,QAAQ,gBACN;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;EAMF,IAAIJ,MAAM,KAAK,WAAX,IAA0BD,cAA1B,IAA4CA,cAAc,CAACM,MAAf,GAAwB,CAAxE,EACED,QAAQ,gBAAG,QAAC,YAAD;IAAc,QAAQ,EAAEL;EAAxB;IAAA;IAAA;IAAA;EAAA,QAAX;EAEF,IACEC,MAAM,KAAK,WAAX,KACC,CAACD,cAAD,IAAmBA,cAAc,CAACM,MAAf,KAA0B,CAD9C,CADF,EAIED,QAAQ,gBAAG;IAAG,SAAS,EAAC,UAAb;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAX;EAEF,oBACE;IAAS,SAAS,EAAEb,OAAO,CAACa,QAA5B;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACV,eAAD,iBACC;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEQ,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;MACE,YAAY,EAAES,iBADhB;MAEE,OAAO,EAAEP,MAAM,CAACK;IAFlB;MAAA;MAAA;MAAA;IAAA,QARJ,EAaGG,QAbH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CArDD;;GAAMX,Q;UAEWP,S,EAEuCC,O;;;KAJlDM,Q;AAuDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}