{"ast":null,"code":"var _jsxFileName = \"/Users/baby/Desktop/web Dev/Quotes-app/src/pages/NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../components/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewQuote = () => {\n  _s();\n\n  //using programatic navigation we redirect user after adding the comment\n  //using history hook we can change and manage url\n  const history = useHistory(); //sendRequest is a callback function it takes data to the useHttp hook\n\n  const {\n    sendRequest,\n    status\n  } = useHttp(addQuote, false);\n  useEffect(() => {\n    if (status === \"completed\") history.push(\"/quotes\");\n  }, [status, history]);\n\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n    console.log(quoteData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(QuoteForm, {\n    isLoading: status === \"pending\",\n    onAddQuote: addQuoteHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewQuote, \"25VDUshOeC8C9ZkyQNgt3GDJ+D8=\", false, function () {\n  return [useHistory, useHttp];\n});\n\n_c = NewQuote;\nexport default NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"names":["useEffect","useHistory","QuoteForm","useHttp","addQuote","NewQuote","history","sendRequest","status","push","addQuoteHandler","quoteData","console","log"],"sources":["/Users/baby/Desktop/web Dev/Quotes-app/src/pages/NewQuote.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../components/lib/api\";\n\nconst NewQuote = () => {\n  //using programatic navigation we redirect user after adding the comment\n  //using history hook we can change and manage url\n  const history = useHistory();\n\n  //sendRequest is a callback function it takes data to the useHttp hook\n  const { sendRequest, status } = useHttp(addQuote, false);\n  useEffect(() => {\n    if (status === \"completed\") history.push(\"/quotes\");\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n    console.log(quoteData);\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,2CAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB;EACA;EACA,MAAMC,OAAO,GAAGL,UAAU,EAA1B,CAHqB,CAKrB;;EACA,MAAM;IAAEM,WAAF;IAAeC;EAAf,IAA0BL,OAAO,CAACC,QAAD,EAAW,KAAX,CAAvC;EACAJ,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,KAAK,WAAf,EAA4BF,OAAO,CAACG,IAAR,CAAa,SAAb;EAC7B,CAFQ,EAEN,CAACD,MAAD,EAASF,OAAT,CAFM,CAAT;;EAIA,MAAMI,eAAe,GAAIC,SAAD,IAAe;IACrCJ,WAAW,CAACI,SAAD,CAAX;IACAC,OAAO,CAACC,GAAR,CAAYF,SAAZ;EACD,CAHD;;EAIA,oBACE,QAAC,SAAD;IAAW,SAAS,EAAEH,MAAM,KAAK,SAAjC;IAA4C,UAAU,EAAEE;EAAxD;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAlBD;;GAAML,Q;UAGYJ,U,EAGgBE,O;;;KAN5BE,Q;AAoBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}